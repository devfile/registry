schemaVersion: 2.2.2
metadata:
  name: jhipster-online
  version: 2.33.0
  description: Stack with the JHipster Online on DevSpaces Red Hat OpenShift
  displayName: JHipster Online
  icon: https://raw.githubusercontent.com/maximilianoPizarro/ecommerce-oracle/main/jhipster-icon.png
  website: https://start.jhipster.tech
  tags:
    - Java
    - JHipster
    - Angular
    - Spring
projects:
  - name: jhipster-online
    git:
      remotes:
        origin: 'https://github.com/maximilianoPizarro/jhipster-online'
      checkoutFrom:
        revision: openshift
components:
  - name: tools
    container:
      image: 'quay.io/maximilianopizarro/jhipster-devspace'
      mountSources: true
      cpuLimit: '4'
      cpuRequest: '1'
      memoryLimit: '8G'
      memoryRequest: '4G'
      volumeMounts:
        - name: m2
          path: /home/user/.m2
        - name: config
          path: /home/user/.config
        - name: npm
          path: /home/user/.npm
      endpoints:
        - exposure: public
          name: backend
          protocol: https
          targetPort: 8080
        - exposure: none
          name: debug
          targetPort: 4200
        - exposure: none
          name: frontend
          protocol: https
          targetPort: 9000
        - exposure: none
          name: debug-frontend
          protocol: https
          targetPort: 9001
        - exposure: none
          name: browser-sync
          protocol: https
          targetPort: 3001                    
      env:
        - value: '-XX:MaxRAMPercentage=50.0 -XX:+UseParallelGC -XX:MinHeapFreeRatio=10 -XX:MaxHeapFreeRatio=20 -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90 -Dsun.zip.disableMemoryMapping=true -Xms20m -Djava.security.egd=file:/dev/./urandom -Duser.home=/home/jboss'
          name: JAVA_OPTS
        - value: $(JAVA_OPTS)
          name: MAVEN_OPTS
        - value: '/home/tooling/.sdkman/candidates/java/11.0.15-tem'
          name: JAVA_HOME
  - name: m2
    volume:
      size: 512Mi
  - name: config
    volume:
      size: 512Mi
  - name: npm
    volume:
      size: 512Mi
commands:
  - id: build-jh-studio
    exec:
      label: 'Package the application with yarn and create MariaDB Instance'
      component: tools
      workingDir: ${PROJECT_SOURCE}
      commandLine: 'oc apply -f src/main/kubernetes/mysql.yaml && yarn install && chmod 777 ./mvnw && echo "do not kill this task, run ./mvnw in other tasks" && yarn start'
  - id: run-jh-studio
    exec:
      label: 'Run ./mvnw'
      component: tools
      workingDir: ${PROJECT_SOURCE}
      commandLine: './mvnw'
      group:
        kind: run
        isDefault: true
events:
  postStart:
    - build-jh-studio
