#
# Copyright (c) 2021 Red Hat, Inc.
# This program and the accompanying materials are made
# available under the terms of the Eclipse Public License 2.0
# which is available at https://www.eclipse.org/legal/epl-2.0/
#
# SPDX-License-Identifier: EPL-2.0
#

# inspired from https://securitylab.github.com/research/github-actions-preventing-pwn-requests/

name: Comment on Pull Request

on:
  # pull_request:
  #   branches: [ 244-new-1 ]
  workflow_run:
    workflows: ["Check Architectures"]
    branches: [ main ]
    # types:
    #   - completed

jobs:
  comment:
    runs-on: ubuntu-latest
    # if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: hello
        run: echo "HELLO :D"
      # - name: 'Download artifact'
      #   uses: actions/github-script@v3.1.0
      #   with:
      #     script: |
      #       var artifacts = await github.actions.listWorkflowRunArtifacts({
      #          owner: context.repo.owner,
      #          repo: context.repo.repo,
      #          run_id: ${{github.event.workflow_run.id }},
      #       });
      #       var matchArtifact = artifacts.data.artifacts.filter((artifact) => {
      #         return artifact.name == "pr"
      #       })[0];
      #       var download = await github.actions.downloadArtifact({
      #          owner: context.repo.owner,
      #          repo: context.repo.repo,
      #          artifact_id: matchArtifact.id,
      #          archive_format: 'zip',
      #       });
      #       var fs = require('fs');
      #       fs.writeFileSync('${{github.workspace}}/pr.zip', Buffer.from(download.data));
      # - run: unzip pr.zip

      # - name: Comment on PR
      #   uses: actions/github-script@v3
      #   with:
      #     github-token: ${{ secrets.GITHUB_TOKEN }}
      #     script: |
      #       var fs = require('fs');
      #       var issue_number = Number(fs.readFileSync('./number'));
      #       var test_output = Number(fs.readFileSync('./output'));
      #       await github.issues.createComment({
      #         owner: context.repo.owner,
      #         repo: context.repo.repo,
      #         issue_number: issue_number,
      #         body: test_output
      #       });
